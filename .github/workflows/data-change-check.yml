name: Daily Data Pre-check

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: write
  actions: write

jobs:
  check_data:
    runs-on: ubuntu-latest
    outputs:
      pl_changed: ${{ steps.compare.outputs.pl_changed }}
    steps:
      - uses: actions/checkout@v4

      - name: Restore previous hash
        id: restore
        uses: actions/cache/restore@v4
        with:
          path: .last_pl_data_hash
          key: pl-data-hash

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run hash generator
        id: pl_hash
        env:
          PYTHONPATH: ${{ github.workspace }}/code
        run: |
          export new_pl_hash=$(python code/data/hash_api.py PL)
          echo "Computed PL hash: $new_pl_hash"
          echo "new_pl_hash=$new_pl_hash" >> $GITHUB_OUTPUT

      - name: Check if changed
        id: compare
        run: |
          echo "Checking if data has changed..."

          # Get previous hash
          if [ -f .last_pl_data_hash ]; then
            previous_pl_hash=$(cat .last_pl_data_hash)
            echo "Previous PL hash found: $previous_pl_hash"
          else
            previous_pl_hash=""
            echo "No previous PL hash found."
          fi

          current_pl_hash="${{ steps.pl_hash.outputs.new_pl_hash }}"
          echo "Current PL hash: $current_pl_hash"

          if [ -n "$previous_pl_hash" ] && [ "$previous_pl_hash" = "$current_pl_hash" ]; then
            echo "PL data is unchanged."
            echo "pl_changed=false" >> $GITHUB_OUTPUT
          else
            echo "PL data has changed (or no previous hash exists)."
            echo "pl_changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Save new hash file
        run: echo "${{ steps.pl_hash.outputs.new_pl_hash }}" > .last_pl_data_hash

      - name: Delete existing cache on data change
        if: ${{ steps.compare.outputs.pl_changed == 'true' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh cache delete pl-data-hash --repo ${{ github.repository }} || echo "No cache to delete"

      - name: Save hash to cache
        if: ${{ steps.compare.outputs.pl_changed == 'true' }}
        uses: actions/cache/save@v4
        with:
          path: .last_pl_data_hash
          key: pl-data-hash

  generate_table:
    needs: check_data
    if: ${{ needs.check_data.outputs.pl_changed == 'true' }}
    uses: ./.github/workflows/generate-table.yml
    secrets:
      MY_API_KEY: ${{ secrets.GITHUB_TOKEN }}
